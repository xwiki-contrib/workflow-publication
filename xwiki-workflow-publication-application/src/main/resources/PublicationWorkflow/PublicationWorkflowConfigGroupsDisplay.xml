<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="PublicationWorkflow.PublicationWorkflowConfigGroupsDisplay" locale="">
  <web>PublicationWorkflow</web>
  <name>PublicationWorkflowConfigGroupsDisplay</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>PublicationWorkflowConfigGroupsDisplay</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
{{html wiki="false" clean="false"}}
#set($property = $object.getxWikiClass().get($name))
#if($type == 'edit')
  #set($discard = $xwiki.jsx.use('PublicationWorkflow.PublicationWorkflowConfigGroupsDisplay', {'minify': false}))
  &lt;span class="groupssuggest"&gt;$doc.displayEdit($property, $prefix, $object)
  &lt;input type="hidden" name="groupssuggesturl" value="$escapetool.xml($doc.getURL('view', 'xpage=uorgsuggest&amp;amp;classname=XWiki.XWikiUsers&amp;amp;uorg=group&amp;amp;wiki=global'))&amp;amp;" disabled="disabled" /&gt;&lt;/span&gt;
#else
  $doc.displayView($property, $prefix, $object)
#end
{{/html}}
{{/velocity}}</content>
  <object>
    <name>PublicationWorkflow.PublicationWorkflowConfigGroupsDisplay</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>67c4160b-04c6-4af6-ab95-bd2d65088ca8</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>var XWiki = (function (XWiki) {
  var widgets = XWiki.widgets = XWiki.widgets || {};
  widgets.GroupsPicker = Class.create({
  initialize: function(element) {
    this.input = element;
    // hack the focus listener to get a grip on the suggest that is used, so that we can change its url afterwards, when the select changes
    this.input.writeAttribute('onfocus', this.input.readAttribute('onfocus').replace(/^/, 'return this._x_suggest = '));
    var original_onfocus = this.input.onfocus;
    var urlinput = this.input.up('.groupssuggest').down('input[name=groupssuggesturl]');    
    this.globalURL = urlinput.value;
    this.input.onfocus = function() {
      this.suggest = original_onfocus.apply(this.input);
      this.suggest.options.timeout = 5000;
      // grab the local url and hold it
      this.localURL = this.suggest.options.script;
    }.bind(this);

    // create a select to the right of the input to allow to change from local groups to global groups
    var localGlobalSelect = new Element('select');
    localGlobalSelect.insert(new Element('option', {'value' : 'local', 'selected' : 'selected'}).insert("$services.localization.render('xe.admin.local')"));
    localGlobalSelect.insert(new Element('option', {'value' : 'global'}).insert("$services.localization.render('xe.admin.global')"));
    // add it right after the input
    this.input.insert({before : localGlobalSelect});
    // listen to the change
    localGlobalSelect.observe('change', this.toggleLocalGlobal.bindAsEventListener(this));
  },
  
  toggleLocalGlobal : function(event) {
    // switch the URLs of the input suggest depending on the value of the select
    var select = event.findElement();
    if (typeof(this.suggest) == 'undefined') {
      return;
    }
    if (select.value == 'global') {
      this.suggest.options.script = this.globalURL;
    } else {
      this.suggest.options.script = this.localURL;
    }
  }
});
  
function init() {
  $$(".groupssuggest .suggested").each(function(item) {
    new XWiki.widgets.GroupsPicker(item);
  });
  return true;
}

// When the document is loading, replace the suggest with this changeable suggest. it's very important to do this on xwiki:dom:loading and not on loaded.
(XWiki.isInitialized &amp;&amp; init())
|| document.observe("xwiki:dom:loading", init);  

  return XWiki;
}(XWiki || {}));</code>
    </property>
    <property>
      <name>Javascript extension to enhance the suggest of the groups with global groups suggestion</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
