<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="PublicationWorkflow.PublicationWorkflowLivetableResults" locale="">
  <web>PublicationWorkflow</web>
  <name>PublicationWorkflowLivetableResults</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>xwiki:PublicationWorkflow.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>PublicationWorkflowLivetableResults</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="XWiki.LiveTableResultsMacros" /}}

{{velocity}}
#set ($map = {})
#gridresult_buildJSON("$!request.classname" $request.collist.split(',') $map)
#set ($rows = $map.get('rows'))

#foreach ($row in $rows)
  #set ($discard = $row.put('contributor', "#displayGroup($row.contributor)"))
  #set ($discard = $row.put('moderator', "#displayGroup($row.moderator)"))
  #set ($discard = $row.put('validator', "#displayGroup($row.validator)"))
#end

#set ($results = {
  "totalrows": $rows.size(),
  "returnedrows": $rows.size(),
  "offset": $mathtool.add($offset, 1),
  "reqNo": $numbertool.toNumber($request.reqNo).intValue(),
  "rows": $rows
})

## jsonResponse macro is available from 10.8-rc-1
#set ($json = $jsontool.serialize($results))
#set ($discard = $response.setContentType('application/json'))
#set ($characterEncoding = 'utf-8')
#set ($discard = $response.setCharacterEncoding($characterEncoding))
#set ($discard = $response.writer.write($json))
#set ($discard = $response.setContentLength($json.getBytes($characterEncoding).size()))
#set ($discard = $response.flushBuffer())
#set ($discard = $xcontext.setFinished(true))
{{/velocity}}</content>
</xwikidoc>
